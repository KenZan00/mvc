<?php

namespace App\Controller;

use App\Entity\Books;
use App\Repository\BooksRepository;
use Doctrine\Persistence\ManagerRegistry;

use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Attribute\Route;

class BooksControllerJson
{
    #[Route("/api")]
    public function api(): Response
    {

        $data = [
            'api/library/books' => 'Shows all books',
            'api/library/book/<isbn>' => 'Show book by ISBN'
        ];


        $response = new JsonResponse($data);
        $response->setEncodingOptions(
            $response->getEncodingOptions() | JSON_PRETTY_PRINT
        );
        return $response;
    }

    #[Route('/api/library/books', name: 'library_show_all_api')]
    public function showAllProductApi(
        BooksRepository $booksRepository
    ): Response {
        $books = $booksRepository
            ->findAll();

        $response = new JsonResponse($books);
        $response->setEncodingOptions(
            $response->getEncodingOptions() | JSON_PRETTY_PRINT
        );
        return $response;
    }

    #[Route('/api/library/books/{isbn}', name: 'library_book_isbn')]
    public function showBookIsbnApi(
        BooksRepository $booksRepository,
        string $isbn
    ): Response {

        $book = $booksRepository->findOneByIsbnField($isbn);

        // if (!$book) {
        //     return new JsonResponse([$isbn => 'Book not found in library']);
        // }

        // $response = new JsonResponse($book);
        // $response->setEncodingOptions(
        //     $response->getEncodingOptions() | JSON_PRETTY_PRINT
        // );
        // return $response;
        var_dump($book);
    }
}
